"""
This script creates the readme.md file for the ScottPlot test directory and
imports all the latest test images from the bin/debug/ folder info this folder.
"""

import glob
import os
import shutil

BINDIR=R"..\..\src\Examples\console\ConsoleApp1\bin\Debug"
SRCFILE=R"..\..\src\Examples\console\ConsoleApp1\Program.cs"

def functionBlocks(sourceFile):
    codeBlock={}    
    with open(sourceFile) as f:
        raw=f.read()
    raw=raw.split("        public static void test")[1:]
    for chunk in raw:
        title=False
        chunk = "        public static void test"+chunk
        chunk=chunk.split("        }")[0]
        lines = chunk.split("\n")
        for i,line in enumerate(lines):
            lines[i]=line[8:]
        code = "\n".join(lines)+"}"
        if "fig.Save(" in code:
            title=code.split("fig.Save(")[-1].split('"')[1]
            print("Found code block for",title)
        if title:
            codeBlock[title]=code
    return codeBlock

if __name__=="__main__":
    codeBlock = functionBlocks(SRCFILE)
    
    for fname in glob.glob("./*.png"):
        os.remove(fname)
    for fname in glob.glob("./*.md"):
        os.remove(fname)
    for fname in glob.glob(BINDIR+"/*.png"):
        shutil.copy(fname, "./")
        
    md = "# ScottPlot Automated Test Sequence\n"
    md += "_Figures are generated by [program.cs](/) and report by [update.py](/)_\n"
    for fname in glob.glob("./*.png"):
        md += "## %s\n"%os.path.basename(fname)
        #md += "### Program Code:\n"
        if os.path.basename(fname) in codeBlock.keys():
            md += "\n```C#\n%s\n```\n"%codeBlock[os.path.basename(fname)]
        else:
            md += "\n```C#// code for this figure could not be found```\n"
        
        #md += "### Output:\n"
        md += "![](%s)\n"%os.path.basename(fname)
        
        
    with open("readme.md",'w') as f:
        f.write(md)
    
    print("DONE")