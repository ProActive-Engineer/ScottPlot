using System.Text;

namespace ScottPlotCookbook.Pages;

internal class FrontPage
{
    StringBuilder SB = new();

    private static string WrapPage(string content, string title) => @"<!doctype html>
        <html lang=""en"">
          <head>
            <meta charset=""utf-8"">
            <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
            <title>{{TITLE}}</title>
            <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css"" rel=""stylesheet"" >
            <style>
            a {text-decoration: none;}
            a:hover {text-decoration: underline;}
            </style>
          </head>
          <body>
            <div class=""container"">
                <main>{{CONTENT}}</main>
            </div>
          </body>
        </html>"
        .Replace("{{TITLE}}", title)
        .Replace("{{CONTENT}}", content)
        .Replace("    ", "");

    public void Generate()
    {
        SB.AppendLine("<header class='text-center my-5'>");
        SB.AppendLine($"<h1>ScottPlot 5.0 Cookbook</h1>");
        SB.AppendLine($"Generated by <code>{ScottPlot.Version.InformalVersion}</code>");
        SB.AppendLine($"on {DateTime.Now.ToShortDateString()}");
        SB.AppendLine($"at {DateTime.Now.ToShortTimeString()}");
        SB.AppendLine("</header>");
        SB.AppendLine("<hr />");

        foreach (Chapter chapter in Cookbook.GetChapters())
        {
            List<RecipePageBase> pagesInChapter = Cookbook.GetPagesInChapter(chapter);
            if (!pagesInChapter.Any())
                continue;
            SB.AppendLine($"<h2 class='mt-5'>{chapter.ToString()}</h2>");
            pagesInChapter.ForEach(x => AddPage(x));
        }

        Export();
    }

    public void Export()
    {
        string partial = Path.Combine(CookbookGenerator.OutputFolder, "index.html");
        File.WriteAllText(partial, SB.ToString());
        TestContext.WriteLine($"SAVING: {partial}");

        string full = Path.Combine(CookbookGenerator.OutputFolder, "index.local.html");
        File.WriteAllText(full, WrapPage(SB.ToString(), "ScottPlot 5 Cookbook"));
        TestContext.WriteLine($"SAVING: {full}");
    }

    private void AddPage(RecipePageBase page)
    {
        SB.AppendLine($"<div class='fs-4 mt-4'>{page.PageDetails.PageName}</div>");
        SB.AppendLine($"<div>{page.PageDetails.PageDescription}</div>");
        page.GetRecipes().ForEach(x => AddRecipeImage(page, x));
    }

    private void AddRecipeImage(RecipePageBase page, IRecipe recipe)
    {
        string imageUrl = CookbookGenerator.GetBaseImageUrl(page.PageDetails, recipe) + ".png";
        SB.AppendLine("<div class='d-flex'>");

        SB.AppendLine($"<a href='{imageUrl}'><img src='{imageUrl}' /></a>");

        SB.AppendLine("<div class='p-3'>");
        SB.AppendLine($"<div><a href='{imageUrl}'><b>{recipe.Name}</b></a></div>");
        SB.AppendLine($"<div>{recipe.Description}</div>");
        SB.AppendLine("</div>");

        SB.AppendLine("</div>");
    }
}
