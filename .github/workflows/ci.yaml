name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: windows-latest
    name: Build Solution
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v2
      - name: 🐢 Set up MSBuild
        uses: microsoft/setup-msbuild@v1.0.3
      - name: 🚚 Restore
        working-directory: src
        run: dotnet restore
      - name: 🐌 MSBuild
        working-directory: src
        run: msbuild -property:Configuration=Release -verbosity:minimal

  format:
    runs-on: ubuntu-latest
    name: Check Formatting
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v2
      - name: ✨ Set up .NET 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"
      - name: ✒️ Set up dotnet-format
        run: dotnet tool install -g dotnet-format
      - name: 🧐 Check Code Format
        working-directory: src
        run: dotnet-format --check

  test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            osName: Linux
          - os: windows-latest
            osName: Windows
          - os: macos-latest
            osName: MacOS

    runs-on: ${{ matrix.os }}

    name: Test on ${{ matrix.osName }}
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v2
      - name: ✨ Set up .NET 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"
      - name: 🚚 Restore
        working-directory: src/tests
        run: dotnet restore
      - name: 🛠️ Build
        working-directory: src/tests
        run: dotnet build --configuration Release --no-restore
      - name: 🧪 Test
        working-directory: src/tests
        run: dotnet test --no-restore

  pack:
    runs-on: windows-latest
    name: Build Packages
    #needs: setup
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v2
      - name: 🐢 Set up MSBuild
        uses: microsoft/setup-msbuild@v1.0.3
      - uses: 🛠️ nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NUGET_API_KEY }}
      - name: ✨ Set up .NET 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"
      - name: 📦 Pack ScottPlot
        run: dotnet pack src/ScottPlot/ScottPlot.csproj --configuration Release
      - name: 📦 Pack ScottPlot.WinForms
        run: dotnet pack src/controls/ScottPlot.WinForms/ScottPlot.WinForms.NUGET.csproj --configuration Release
      - name: 📦 Pack ScottPlot.WPF
        run: dotnet pack src/controls/ScottPlot.WPF/ScottPlot.WPF.NUGET.csproj --configuration Release
      - name: 📦 Pack ScottPlot.Avalonia
        # Avalonia control requires package to be made at build time
        run: dotnet build src/controls/ScottPlot.Avalonia/ScottPlot.Avalonia.NUGET.csproj --configuration Release
      - name: 🚀 Publish ScottPlot
        # Only gets published on NuGet it if the version number was bumped
        run: |
          nuget push /bin/Release/*.nupkg -SkipDuplicate --Source https://api.nuget.org/v3/index.json
          nuget push src/controls/ScottPlot.WinForms/bin/Release/*.nupkg -SkipDuplicate --Source https://api.nuget.org/v3/index.json
          nuget push src/controls/ScottPlot.WPF/bin/Release/*.nupkg -SkipDuplicate --Source https://api.nuget.org/v3/index.json
          nuget push src/controls/ScottPlot.Avalonia/bin/Release/*.nupkg -SkipDuplicate --Source https://api.nuget.org/v3/index.json
